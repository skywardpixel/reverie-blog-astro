---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogCard from '../../components/BlogCard.astro';
import PageHero from '../../components/PageHero.astro';
import { getCollection } from 'astro:content';
import { format } from 'date-fns';
import { getSiteTitle, t, siteConfig } from '../../utils/config';

const posts = (await getCollection('blog'))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

// Group posts by year
const postsByYear = posts.reduce(
  (acc, post) => {
    const year = new Date(post.data.publishDate).getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, typeof posts>
);

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout
  title={t('blog')}
  description={`${siteConfig.blogMetaDescription} - ${getSiteTitle()}`}
  activeNav="blog"
>
  <PageHero
    title={t('blog')}
    subtitle={siteConfig.blogSubtitle}
    stats={[
      { number: posts.length, label: t('posts') },
      { number: years.length, label: t('yearsWriting') },
    ]}
  />

  <section class="blog-posts">
    <div class="container">
      {
        years.map(year => (
          <div class="year-section">
            <h2 class="year-title">
              <span class="year-number">{year}</span>
              <span class="year-count">
                {postsByYear[Number(year)].length} {t('posts')}
              </span>
            </h2>
            <div class="posts-grid">
              {postsByYear[Number(year)].map(post => (
                <BlogCard post={post} />
              ))}
            </div>
          </div>
        ))
      }

      {
        posts.length === 0 && (
          <div class="empty-state">
            <div class="empty-state-content">
              <svg
                width="80"
                height="80"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                <polyline points="14 2 14 8 20 8" />
                <line x1="16" y1="13" x2="8" y2="13" />
                <line x1="16" y1="17" x2="8" y2="17" />
                <polyline points="10 9 9 9 8 9" />
              </svg>
              <h2>{t('emptyStateTitle')}</h2>
              <p>{t('emptyStateText')}</p>
            </div>
          </div>
        )
      }
    </div>
  </section>
</BaseLayout>

<style>
  .blog-posts {
    padding: 4rem 0 6rem;
    background: var(--color-bg);
  }

  @media (max-width: 768px) {
    .blog-posts {
      padding: 2rem 0 3rem;
    }
  }

  .year-section {
    margin-bottom: 4rem;
  }

  @media (max-width: 768px) {
    .year-section {
      margin-bottom: 2rem;
    }
  }

  .year-title {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--color-border);
  }

  .year-number {
    font-family: var(--font-display);
    font-size: 1.75rem;
    font-weight: 500;
    letter-spacing: -0.02em;
    background: linear-gradient(
      135deg,
      var(--color-text) 0%,
      var(--color-accent) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .year-count {
    font-size: 0.875rem;
    color: var(--color-text-tertiary);
    font-weight: 500;
    padding: 0.375rem 1rem;
    background: var(--color-border-light);
    border: none;
    border-radius: 12px;
    font-family: var(--font-family);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1rem;
  }

  .empty-state {
    padding: 6rem 0;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .empty-state-content {
    text-align: center;
    padding: 3rem;
    background: var(--color-surface);
    backdrop-filter: blur(10px);
    border: none;
    border-radius: 24px;
    max-width: 400px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }

  .empty-state-content svg {
    color: var(--color-text-tertiary);
    margin-bottom: 1.5rem;
  }

  .empty-state-content h2 {
    font-family: var(--font-display);
    font-size: 1.5rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    letter-spacing: -0.02em;
    color: var(--color-text);
  }

  .empty-state-content p {
    color: var(--color-text-secondary);
    margin: 0;
  }

  @media (max-width: 768px) {
    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .year-number {
      font-size: 1.5rem;
      letter-spacing: -0.015em;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .hero-title {
      animation: none;
    }
  }
</style>
