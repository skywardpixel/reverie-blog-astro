---
import BaseLayout from './BaseLayout.astro';
import { format } from 'date-fns';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  data: CollectionEntry<'blog'>['data'];
  readingTime?: string;
}

const { data, readingTime } = Astro.props;
const { title, description, publishDate, updatedDate, heroImage, tags } = data;

const formattedPublishDate = format(new Date(publishDate), 'MMMM dd, yyyy');
const formattedUpdatedDate = updatedDate ? format(new Date(updatedDate), 'MMMM dd, yyyy') : null;
---

<BaseLayout title={title} description={description} activeNav="blog">
  <article class="blog-post">
    <div class="hero-section">
      {heroImage && (
        <div class="hero-image">
          <img src={heroImage} alt={title} />
          <div class="hero-overlay"></div>
        </div>
      )}
      <div class="hero-content">
        <div class="container">
          <div class="post-meta">
            <time datetime={publishDate.toISOString()}>
              {formattedPublishDate}
            </time>
            {readingTime && (
              <>
                <span class="meta-separator">•</span>
                <span>{readingTime}</span>
              </>
            )}
            {formattedUpdatedDate && (
              <>
                <span class="meta-separator">•</span>
                <span>Updated {formattedUpdatedDate}</span>
              </>
            )}
          </div>
          <h1 class="post-title">{title}</h1>
          <p class="post-description">{description}</p>
          {tags.length > 0 && (
            <div class="post-tags">
              {tags.map((tag) => (
                <span class="tag-glass">{tag}</span>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>

    <div class="container">
      <div class="post-content-wrapper">
        <div class="post-content glass-content prose">
          <slot />
        </div>

        <aside class="post-sidebar">
          <div class="toc-glass">
            <h3>Table of Contents</h3>
            <nav class="toc-nav" id="toc-nav">
              <!-- TOC will be generated via JavaScript -->
            </nav>
          </div>

          <div class="share-glass">
            <h3>Share</h3>
            <div class="share-buttons">
              <button class="share-btn" data-share="twitter" aria-label="Share on Twitter">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>
                </svg>
              </button>
              <button class="share-btn" data-share="linkedin" aria-label="Share on LinkedIn">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
                  <rect x="2" y="9" width="4" height="12"></rect>
                  <circle cx="4" cy="4" r="2"></circle>
                </svg>
              </button>
              <button class="share-btn" data-share="copy" aria-label="Copy link">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
                  <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
                </svg>
              </button>
            </div>
          </div>
        </aside>
      </div>
    </div>

    <nav class="post-navigation">
      <div class="container">
        <div class="nav-links">
          <a href="/blog" class="nav-link nav-link-prev">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <line x1="19" y1="12" x2="5" y2="12"></line>
              <polyline points="12 19 5 12 12 5"></polyline>
            </svg>
            <span>Back to Blog</span>
          </a>
        </div>
      </div>
    </nav>
  </article>
</BaseLayout>

<style>
  .blog-post {
    position: relative;
    z-index: 2;
  }

  .hero-section {
    position: relative;
    margin-bottom: 3rem;
  }

  .hero-image {
    position: relative;
    height: 400px;
    overflow: hidden;
    margin-bottom: -100px;
  }

  .hero-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .hero-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 200px;
    background: linear-gradient(to top, var(--color-bg) 0%, transparent 100%);
  }

  .hero-content {
    position: relative;
    padding: 2rem 0;
    background: linear-gradient(to bottom, transparent 0%, var(--color-bg) 100px);
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.6);
    margin-bottom: 1rem;
  }

  .meta-separator {
    color: rgba(255, 255, 255, 0.3);
  }

  .post-title {
    font-size: clamp(2rem, 5vw, 3.5rem);
    font-weight: 700;
    line-height: 1.1;
    margin-bottom: 1.5rem;
    background: linear-gradient(135deg, #ffffff 0%, #93c5fd 100%);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .post-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 1.5rem;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .tag-glass {
    padding: 0.5rem 1rem;
    background: rgba(96, 165, 250, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(96, 165, 250, 0.2);
    border-radius: 16px;
    font-size: 0.875rem;
    color: #93c5fd;
    font-weight: 500;
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .tag-glass:hover {
    background: rgba(96, 165, 250, 0.15);
    border-color: rgba(96, 165, 250, 0.3);
    transform: translateY(-2px);
  }

  .post-content-wrapper {
    display: grid;
    grid-template-columns: 1fr 300px;
    gap: 3rem;
    margin-bottom: 3rem;
  }

  .post-content {
    min-width: 0;
  }

  .glass-content {
    background: rgba(255, 255, 255, 0.02);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 24px;
    padding: 3rem;
    font-family: var(--font-serif);
  }

  /* Post content styles */
  .post-content :global(h2) {
    font-family: var(--font-display);
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    letter-spacing: -0.025em;
  }

  .post-content :global(h3) {
    font-family: var(--font-display);
    margin-top: 2rem;
    margin-bottom: 1rem;
    letter-spacing: -0.02em;
  }

  .post-content :global(p) {
    font-family: var(--font-serif);
    font-size: 1.125rem;
    margin-bottom: 1.75rem;
    line-height: 1.75;
    color: rgba(44, 62, 80, 0.9);
    max-width: 70ch;
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
    color: rgba(255, 255, 255, 0.85);
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
    line-height: 1.8;
  }

  .post-content :global(blockquote) {
    font-family: var(--font-serif);
    font-style: italic;
    font-size: 1.125rem;
    margin: 2rem 0;
    padding: 1.5rem;
    background: rgba(99, 102, 241, 0.03);
    border-left: 3px solid rgba(99, 102, 241, 0.3);
    border-radius: 8px;
    line-height: 1.7;
  }

  .post-content :global(img) {
    width: 100%;
    height: auto;
    border-radius: 16px;
    margin: 2rem 0;
  }

  .post-content :global(a) {
    color: #6366f1;
    text-decoration: underline;
    text-underline-offset: 3px;
    text-decoration-thickness: 1px;
    transition: all 200ms;
  }

  .post-content :global(a:hover) {
    color: #8b5cf6;
    text-decoration-thickness: 2px;
  }

  /* Sidebar */
  .post-sidebar {
    position: sticky;
    top: 6rem;
    height: fit-content;
  }

  .toc-glass,
  .share-glass {
    background: rgba(255, 255, 255, 0.03);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.08);
    border-radius: 20px;
    padding: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .toc-glass h3,
  .share-glass h3 {
    font-size: 1rem;
    margin-bottom: 1rem;
    color: rgba(255, 255, 255, 0.9);
  }

  .toc-nav {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .share-buttons {
    display: flex;
    gap: 0.75rem;
  }

  .share-btn {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    color: rgba(255, 255, 255, 0.7);
    cursor: pointer;
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .share-btn:hover {
    background: rgba(96, 165, 250, 0.2);
    border-color: rgba(96, 165, 250, 0.3);
    color: #ffffff;
    transform: translateY(-2px);
  }

  /* Post Navigation */
  .post-navigation {
    margin-top: 4rem;
    padding: 2rem 0;
    border-top: 1px solid rgba(255, 255, 255, 0.08);
  }

  .nav-links {
    display: flex;
    justify-content: space-between;
  }

  .nav-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 1.5rem;
    background: rgba(255, 255, 255, 0.03);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.08);
    border-radius: 16px;
    color: rgba(255, 255, 255, 0.8);
    text-decoration: none;
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .nav-link:hover {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.12);
    transform: translateX(-4px);
  }

  /* Mobile styles */
  @media (max-width: 1024px) {
    .post-content-wrapper {
      grid-template-columns: 1fr;
    }

    .post-sidebar {
      display: none;
    }
  }

  @media (max-width: 640px) {
    .hero-image {
      height: 250px;
    }

    .glass-content {
      padding: 1.5rem;
      border-radius: 16px;
    }

    .post-title {
      font-size: 2rem;
    }

    .post-description {
      font-size: 1.1rem;
    }
  }
</style>

<script>
  // Generate table of contents
  document.addEventListener('DOMContentLoaded', () => {
    const tocNav = document.getElementById('toc-nav');
    const postContent = document.querySelector('.post-content');

    if (tocNav && postContent) {
      const headings = postContent.querySelectorAll('h2, h3');

      if (headings.length > 0) {
        headings.forEach((heading, index) => {
          // Add ID to heading if it doesn't have one
          if (!heading.id) {
            heading.id = `heading-${index}`;
          }

          // Create TOC link
          const link = document.createElement('a');
          link.href = `#${heading.id}`;
          link.textContent = heading.textContent;
          link.className = heading.tagName === 'H2' ? 'toc-link toc-h2' : 'toc-link toc-h3';

          tocNav.appendChild(link);
        });
      }
    }
  });

  // Share functionality
  document.addEventListener('DOMContentLoaded', () => {
    const shareButtons = document.querySelectorAll('.share-btn');
    const pageUrl = window.location.href;
    const pageTitle = document.querySelector('.post-title')?.textContent || '';

    shareButtons.forEach(button => {
      button.addEventListener('click', () => {
        const shareType = button.dataset.share;

        switch(shareType) {
          case 'twitter':
            window.open(
              `https://twitter.com/intent/tweet?text=${encodeURIComponent(pageTitle)}&url=${encodeURIComponent(pageUrl)}`,
              '_blank'
            );
            break;
          case 'linkedin':
            window.open(
              `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(pageUrl)}`,
              '_blank'
            );
            break;
          case 'copy':
            navigator.clipboard.writeText(pageUrl).then(() => {
              button.innerHTML = '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>';
              setTimeout(() => {
                button.innerHTML = '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path></svg>';
              }, 2000);
            });
            break;
        }
      });
    });
  });
</script>

<style>
  .toc-link {
    display: block;
    padding: 0.5rem 0;
    color: rgba(255, 255, 255, 0.6);
    text-decoration: none;
    transition: color 200ms;
    border-left: 2px solid transparent;
    padding-left: 1rem;
  }

  .toc-link:hover {
    color: rgba(255, 255, 255, 0.9);
    border-left-color: rgba(96, 165, 250, 0.5);
  }

  .toc-h3 {
    padding-left: 2rem;
    font-size: 0.875rem;
  }
</style>
