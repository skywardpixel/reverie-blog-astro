---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogCard from '../../components/BlogCard.astro';
import { getCollection } from 'astro:content';

const posts = (await getCollection('blog'))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

// Group posts by year
const postsByYear = posts.reduce(
  (acc, post) => {
    const year = new Date(post.data.publishDate).getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, typeof posts>
);

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout
  title="Blog - Reverie"
  description="Personal thoughts, reflections, and stories from my life"
  activeNav="blog"
>
  <section class="blog-hero">
    <div class="container">
      <div class="hero-content">
        <h1 class="hero-title">Blog</h1>
        <p class="hero-description">
          Welcome to my personal corner of the internet. Here I share thoughts
          about life, experiences, and whatever happens to be on my mind.
        </p>
        <div class="stats-row">
          <div class="stat-item">
            <span class="stat-number">{posts.length}</span>
            <span class="stat-label">Posts</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">{years.length}</span>
            <span class="stat-label">Years<br />Writing</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="blog-posts">
    <div class="container">
      {
        years.map(year => (
          <div class="year-section">
            <h2 class="year-title">
              <span class="year-number">{year}</span>
              <span class="year-count">
                {postsByYear[Number(year)].length} posts
              </span>
            </h2>
            <div class="posts-grid">
              {postsByYear[Number(year)].map(post => (
                <BlogCard post={post} />
              ))}
            </div>
          </div>
        ))
      }

      {
        posts.length === 0 && (
          <div class="empty-state">
            <div class="empty-state-content">
              <svg
                width="80"
                height="80"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                <polyline points="14 2 14 8 20 8" />
                <line x1="16" y1="13" x2="8" y2="13" />
                <line x1="16" y1="17" x2="8" y2="17" />
                <polyline points="10 9 9 9 8 9" />
              </svg>
              <h2>No posts yet</h2>
              <p>Stay tuned for upcoming content!</p>
            </div>
          </div>
        )
      }
    </div>
  </section>
</BaseLayout>

<style>
  .blog-hero {
    padding: 6rem 0 4rem;
    position: relative;
    overflow: hidden;
    background: var(--color-bg);
  }

  .hero-content {
    position: relative;
    z-index: 1;
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }

  .hero-title {
    font-family: var(--font-display);
    font-size: clamp(3rem, 8vw, 4.5rem);
    font-weight: 500;
    margin-bottom: 1.5rem;
    letter-spacing: -0.03em;
    background: linear-gradient(
      135deg,
      var(--color-text) 0%,
      var(--color-accent) 50%,
      var(--color-accent-light) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-flow 6s ease infinite;
    background-size: 200% 200%;
  }

  @keyframes gradient-flow {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .hero-description {
    font-family: var(--font-serif);
    font-size: 1.25rem;
    line-height: 1.7;
    color: var(--color-text-secondary);
    margin-bottom: 2rem;
  }

  .stats-row {
    display: flex;
    justify-content: center;
    gap: 3rem;
    margin-top: 3rem;
  }

  .stat-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 1.5rem 2rem;
    background: var(--color-surface);
    backdrop-filter: blur(10px);
    border: 1px solid var(--color-border);
    border-radius: 20px;
    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
    width: 120px;
    min-width: 120px;
  }

  .stat-item:hover {
    background: var(--color-border-light);
    border-color: var(--color-border);
    transform: translateY(-4px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.1);
  }

  .stat-number {
    font-size: 2rem;
    font-weight: 700;
    background: linear-gradient(
      135deg,
      var(--color-accent) 0%,
      var(--color-accent-light) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .blog-posts {
    padding: 4rem 0 6rem;
    background: var(--color-bg);
  }

  @media (max-width: 768px) {
    .blog-posts {
      padding: 2rem 0 3rem;
    }
  }

  .year-section {
    margin-bottom: 4rem;
  }

  @media (max-width: 768px) {
    .year-section {
      margin-bottom: 2rem;
    }
  }

  .year-title {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--color-border);
  }

  .year-number {
    font-family: var(--font-display);
    font-size: 1.75rem;
    font-weight: 500;
    letter-spacing: -0.02em;
    background: linear-gradient(
      135deg,
      var(--color-text) 0%,
      var(--color-accent) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .year-count {
    font-size: 0.875rem;
    color: var(--color-text-tertiary);
    font-weight: 500;
    padding: 0.25rem 0.75rem;
    background: var(--color-border-light);
    border: 1px solid var(--color-border);
    border-radius: 12px;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1rem;
  }

  .empty-state {
    padding: 6rem 0;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .empty-state-content {
    text-align: center;
    padding: 3rem;
    background: var(--color-surface);
    backdrop-filter: blur(10px);
    border: 1px solid var(--color-border);
    border-radius: 24px;
    max-width: 400px;
  }

  .empty-state-content svg {
    color: var(--color-text-tertiary);
    margin-bottom: 1.5rem;
  }

  .empty-state-content h2 {
    font-family: var(--font-display);
    font-size: 1.5rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    letter-spacing: -0.02em;
    color: var(--color-text);
  }

  .empty-state-content p {
    color: var(--color-text-secondary);
    margin: 0;
  }

  @media (max-width: 768px) {
    .blog-hero {
      padding: 2rem 0 1.5rem;
    }

    .hero-title {
      font-size: 2.5rem;
      letter-spacing: -0.025em;
    }

    .hero-description {
      font-size: 1.1rem;
    }

    .stats-row {
      gap: 1rem;
      margin-top: 2rem;
    }

    .stat-item {
      padding: 1rem 1.25rem;
      width: 100px;
      min-width: 100px;
    }

    .stat-number {
      font-size: 1.5rem;
    }

    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .year-number {
      font-size: 1.5rem;
      letter-spacing: -0.015em;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .hero-title {
      animation: none;
    }

    .blog-hero::before {
      animation: none;
    }
  }
</style>
